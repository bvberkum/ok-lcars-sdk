extends ../view/base/forms.pug

mixin ok-diagram(formData)
  if typeof formData == "string"
    .wrapper&attributes(attributes)= formData
  else
    .wrapper&attributes(attributes)
      if "undefined" != typeof formData.length
        for element in formData
          - for( attr in element )
            - el = okFormElementParse(attr)
            +#{el[0]}(element[attr])&attributes(el[1])

mixin ok-column(c_formData)
  if typeof c_formData == "string"
    .column&attributes(attributes)= c_formData
  else
    .column&attributes(attributes)
      if "undefined" != typeof c_formData.length
        for c_element in c_formData
          - for( c_attr in c_element )
            - c_el = okFormElementParse(c_attr)
            - console.log( 'ok-column it', c_attr, c_el, c_element[c_attr] )
            +#{c_el[0]}(c_element[c_attr])&attributes(c_el[1])

mixin ok-text(formData)
  span.text&attributes(attributes)= formData

mixin ok-header(formData)
  h3.text&attributes(attributes)= formData

mixin ok-paragraph(p_formData)
  if typeof p_formData == "string"
    p.text&attributes(attributes)= p_formData
  else
    p.text&attributes(attributes)
      if "undefined" != typeof p_formData.length
        for p_element in p_formData
          - for( p_attr in p_element )
            - p_el = okFormElementParse(p_attr)
            - console.log(p_attr, p_el, p_subs)
            +#{p_el[0]}(p_element[p_attr])&attributes(p_el[1])

mixin ok-pillbar(formData)
  .row
    +ok-cap-left()&attributes(attributes)
    +ok-bar(formData)&attributes(attributes)
    +ok-cap-right()&attributes(attributes)

mixin ok-cap-left(formData)
      .cap.left&attributes(attributes)= formData

mixin ok-cap-right(formData)
      .cap.right&attributes(attributes)= formData

mixin ok-bar(formData)
  if typeof formData == "string"
    .bar.flexch(data-label= formData)&attributes(attributes)
  else
    .bar.flexch&attributes(attributes)
  

block main
  - 

    if (typeof formDataFile === "undefined") {
      formDataFile = 'var/sdk-demo/form-1.json'
    }
    let fs = require('fs')
    let formData = JSON.parse(fs.readFileSync(formDataFile))

    function okFormElementParse(s) {
      let elementName, classes, attrRaw, attributes={};
      if( s.match(/[@\.]/) ) {
        attrRaw = s.split('@')
        classes = attrRaw.shift().split('.')
        elementName = classes.shift()
        Object.assign(attributes, Object.fromEntries(
          attrRaw.map(x => x.split('='))))
        if( 'class' in attributes ) {
          attributes['class'] += classes.join(" ")
        } else {
          attributes['class'] = classes.join(" ")
        }

      } else {
        elementName = s
      }
      return [ elementName, attributes ]
    }

  - for( root in formData )
    - r_el = okFormElementParse(root)
    +#{r_el[0]}(formData[root])&attributes(r_el[1])
